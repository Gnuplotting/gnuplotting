<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>
	Comments on: Heat maps	</title>
	<atom:link href="./index.html?simply_static_page=2262" rel="self" type="application/rss+xml" />
	<link>./../index.html</link>
	<description>Create scientific plots using gnuplot</description>
	<lastBuildDate>Fri, 22 Apr 2016 08:56:38 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.1.1</generator>
	<item>
		<title>
		By: Valerio		</title>
		<link>./../comment-page-1/index.html#comment-423026</link>

		<dc:creator><![CDATA[Valerio]]></dc:creator>
		<pubDate>Fri, 22 Apr 2016 08:56:38 +0000</pubDate>
		<guid isPermaLink="false">./../../index.html?p=980#comment-423026</guid>

					<description><![CDATA[Hi,
do you have an example of Gnuplot heatmaps that resemble something shown here https://learnr.wordpress.com/2010/01/26/ggplot2-quick-heatmap-plotting/ ? 
It seems unreasonably complex to realise something like that, but still..

I&#039;ve tried with:
set term pdfcairo 
set output &quot;latency_heat.pdf&quot;
load &quot;../styles.inc&quot;
set size 0.9,1.0
set lmargin 15
set rmargin 20
set pm3d #interpolate 0,100
set view map scale 1
set style func pm3d
set style data pm3d;
set dgrid3d
set pal defined ( 0 0 0 0, 1 1 1 1 )
set tic scale 0
set cblabel &quot;Latency (ms)&quot;
set datafile separator comma
splot &quot;heatmap_latencies.txt&quot; matrix rowheaders columnheaders using 1:2:3 with image title &quot;&quot;

Where the input file is:
,One,Two,Three
a,675.0, 1177.0, 1975.0
b,744.0, 13908.0, 20191.0
c,1767.0, 4374.0  ,5165.0
d,678.0, 1101.0  ,1888.0
e, 771.0, 13842.0 ,18648.0
f, 1372.0, 4264.0  ,5187.0
g,753.0 , 1541.0  ,1729.0
h,791.0 , 5832.0  ,20528.0
i,1310.0, 1225.0  ,5436.0
l,747.0,  1516.0  ,2118.0
m,825.0 , 16719.0 ,0
n,1341.0, 4427.0 ,9040.0

But due to the interpolation, result is not what I expect...]]></description>
			<content:encoded><![CDATA[<p>Hi,<br />
do you have an example of Gnuplot heatmaps that resemble something shown here <a href="https://learnr.wordpress.com/2010/01/26/ggplot2-quick-heatmap-plotting/" rel="nofollow ugc">https://learnr.wordpress.com/2010/01/26/ggplot2-quick-heatmap-plotting/</a> ?<br />
It seems unreasonably complex to realise something like that, but still..</p>
<p>I&#8217;ve tried with:<br />
set term pdfcairo<br />
set output &#8220;latency_heat.pdf&#8221;<br />
load &#8220;../styles.inc&#8221;<br />
set size 0.9,1.0<br />
set lmargin 15<br />
set rmargin 20<br />
set pm3d #interpolate 0,100<br />
set view map scale 1<br />
set style func pm3d<br />
set style data pm3d;<br />
set dgrid3d<br />
set pal defined ( 0 0 0 0, 1 1 1 1 )<br />
set tic scale 0<br />
set cblabel &#8220;Latency (ms)&#8221;<br />
set datafile separator comma<br />
splot &#8220;heatmap_latencies.txt&#8221; matrix rowheaders columnheaders using 1:2:3 with image title &#8220;&#8221;</p>
<p>Where the input file is:<br />
,One,Two,Three<br />
a,675.0, 1177.0, 1975.0<br />
b,744.0, 13908.0, 20191.0<br />
c,1767.0, 4374.0  ,5165.0<br />
d,678.0, 1101.0  ,1888.0<br />
e, 771.0, 13842.0 ,18648.0<br />
f, 1372.0, 4264.0  ,5187.0<br />
g,753.0 , 1541.0  ,1729.0<br />
h,791.0 , 5832.0  ,20528.0<br />
i,1310.0, 1225.0  ,5436.0<br />
l,747.0,  1516.0  ,2118.0<br />
m,825.0 , 16719.0 ,0<br />
n,1341.0, 4427.0 ,9040.0</p>
<p>But due to the interpolation, result is not what I expect&#8230;</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: hagen		</title>
		<link>./../comment-page-1/index.html#comment-3714</link>

		<dc:creator><![CDATA[hagen]]></dc:creator>
		<pubDate>Fri, 17 May 2013 12:31:06 +0000</pubDate>
		<guid isPermaLink="false">./../../index.html?p=980#comment-3714</guid>

					<description><![CDATA[Mh, strange. Maybe you try this first with the newest version of gnuplot and then report a bug.]]></description>
			<content:encoded><![CDATA[<p>Mh, strange. Maybe you try this first with the newest version of gnuplot and then report a bug.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Josce		</title>
		<link>./../comment-page-1/index.html#comment-3705</link>

		<dc:creator><![CDATA[Josce]]></dc:creator>
		<pubDate>Thu, 16 May 2013 07:24:24 +0000</pubDate>
		<guid isPermaLink="false">./../../index.html?p=980#comment-3705</guid>

					<description><![CDATA[I was wondering whether the same type of colour-coded parametric surface can be obtained for an analytic function?

Indeed, splot admits 4 using-specs to make a pm3d graph, but won&#039;t accept a 4th coordinate in parametric mode:
&lt;pre class=&quot;prettyprint&quot;&gt;
&#062;splot sin(u)*cos(v),sin(u)*sin(v),cos(u),cos(2*u) w pm3d
         parametric function not fully specified
&lt;/pre&gt;
Fortunately, the special filenames &#039;+&#039; and &#039;++&#039; allow to use the &#039;using&#039; specification with analytic functions
&lt;pre class=&quot;prettyprint&quot;&gt;
gnuplot&#062; set hidden3d front
gnuplot&#062;  set pm3d hidd
gnuplot&#062; set yra [-1.57:1.57]
gnuplot&#062;  set xra [-3.14:3.14]
gnuplot&#062; splot &#039;++&#039; using (sin($1)*cos($2)):(sin($1)*sin($2)):(cos($1)):(cos(2*$1)) with pm3d
&lt;/pre&gt;
However, in gnuplot 4.6-0 I am having bugs in the hidden3d rendering (surface at the back is over the one at the front in places), which I don&#039;t get with a non-colour-coded plot.

Any thoughts or should I report a bug?]]></description>
			<content:encoded><![CDATA[<p>I was wondering whether the same type of colour-coded parametric surface can be obtained for an analytic function?</p>
<p>Indeed, splot admits 4 using-specs to make a pm3d graph, but won&#8217;t accept a 4th coordinate in parametric mode:</p>
<pre class="prettyprint">
&gt;splot sin(u)*cos(v),sin(u)*sin(v),cos(u),cos(2*u) w pm3d
         parametric function not fully specified
</pre>
<p>Fortunately, the special filenames &#8216;+&#8217; and &#8216;++&#8217; allow to use the &#8216;using&#8217; specification with analytic functions</p>
<pre class="prettyprint">
gnuplot&gt; set hidden3d front
gnuplot&gt;  set pm3d hidd
gnuplot&gt; set yra [-1.57:1.57]
gnuplot&gt;  set xra [-3.14:3.14]
gnuplot&gt; splot '++' using (sin($1)*cos($2)):(sin($1)*sin($2)):(cos($1)):(cos(2*$1)) with pm3d
</pre>
<p>However, in gnuplot 4.6-0 I am having bugs in the hidden3d rendering (surface at the back is over the one at the front in places), which I don&#8217;t get with a non-colour-coded plot.</p>
<p>Any thoughts or should I report a bug?</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: hagen		</title>
		<link>./../comment-page-1/index.html#comment-3095</link>

		<dc:creator><![CDATA[hagen]]></dc:creator>
		<pubDate>Tue, 26 Mar 2013 15:05:30 +0000</pubDate>
		<guid isPermaLink="false">./../../index.html?p=980#comment-3095</guid>

					<description><![CDATA[Very cool!

Here is the result.

&lt;p class=&quot;center&quot;&gt;
&lt;img src=&quot;./../../figs/heatmap_mollweide.png&quot; alt=&quot;Heat map&quot; width=&quot;480&quot;/&gt;
&lt;/p&gt;
]]></description>
			<content:encoded><![CDATA[<p>Very cool!</p>
<p>Here is the result.</p>
<p class="center">
<img src="./../../figs/heatmap_mollweide.png" alt="Heat map" width="480"/></p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Namio Matuda		</title>
		<link>./../comment-page-1/index.html#comment-3094</link>

		<dc:creator><![CDATA[Namio Matuda]]></dc:creator>
		<pubDate>Tue, 26 Mar 2013 14:41:19 +0000</pubDate>
		<guid isPermaLink="false">./../../index.html?p=980#comment-3094</guid>

					<description><![CDATA[I&#039;m very interested in heat map using pm3d.  And I tried to make another one. 
An example script producing  Mollweide&#039;s projection map is shown bellow.  In this script,  q(t,x,dx,n) solves nonlinear equation of auxiliary angle by using Newton-Raphson method. 

&lt;pre class=&quot;prettyprint&quot;&gt;
q(t, x, dx, n) = ( 1e-15 &#060; abs(dx) &#038;&#038; 0 &#060; n ) ? q(t, x+dx, -(x + sin(x)- t)/(1+cos(x)), n-1): x/2

set palette defined (0 &#034;blue&#034;,17 &#034;#00ffff&#034;,33 &#034;white&#034;,50 &#034;yellow&#034;,66 &#034;red&#034;, 100 &#034;#990000&#034;,101 &#034;gray&#034;)
set style line 112 lt 0 lw 0.5 lc rgb &#034;#006600&#034;
unset key
unset border
unset tics
set cbtics
set cbrange [-4:8]
set pm3d nohidden3d
set view 0,0,1.6
set colorbox user size 0.02,0.3 orig 0.92,0.65
set term pngc enh font &#034;Arial,8&#034; size 480,240
set out &#034;heatmap.png&#034;

splot \
&#039;temperature.dat&#039; using \
  (th=q(pi*sin($1*pi/180),2*asin($1/90.0),3e-14,10),($2/90.0)*cos(th)): (sin(th)):(1):($3)  w pm3d,\
&#039;world.dat&#039; using \
  (th=q(pi*sin($2/180*pi),2*asin($2/90),3e-14,10),($1/90)*cos(th)): (sin(th)):(2)  w lines lc rgb &#034;black&#034;

! display heatmap.png
&lt;/pre&gt;

Have a fun!]]></description>
			<content:encoded><![CDATA[<p>I&#8217;m very interested in heat map using pm3d.  And I tried to make another one.<br />
An example script producing  Mollweide&#8217;s projection map is shown bellow.  In this script,  q(t,x,dx,n) solves nonlinear equation of auxiliary angle by using Newton-Raphson method. </p>
<pre class="prettyprint">
q(t, x, dx, n) = ( 1e-15 &lt; abs(dx) &amp;&amp; 0 &lt; n ) ? q(t, x+dx, -(x + sin(x)- t)/(1+cos(x)), n-1): x/2

set palette defined (0 &quot;blue&quot;,17 &quot;#00ffff&quot;,33 &quot;white&quot;,50 &quot;yellow&quot;,66 &quot;red&quot;, 100 &quot;#990000&quot;,101 &quot;gray&quot;)
set style line 112 lt 0 lw 0.5 lc rgb &quot;#006600&quot;
unset key
unset border
unset tics
set cbtics
set cbrange [-4:8]
set pm3d nohidden3d
set view 0,0,1.6
set colorbox user size 0.02,0.3 orig 0.92,0.65
set term pngc enh font &quot;Arial,8&quot; size 480,240
set out &quot;heatmap.png&quot;

splot \
&#039;temperature.dat&#039; using \
  (th=q(pi*sin($1*pi/180),2*asin($1/90.0),3e-14,10),($2/90.0)*cos(th)): (sin(th)):(1):($3)  w pm3d,\
&#039;world.dat&#039; using \
  (th=q(pi*sin($2/180*pi),2*asin($2/90),3e-14,10),($1/90)*cos(th)): (sin(th)):(2)  w lines lc rgb &quot;black&quot;

! display heatmap.png
</pre>
<p>Have a fun!</p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>
